stages:
  - compile
  - unit_test
  - sonarqube
  - package
  - nexus_artifact
  - deploy
  - argocd_kubernetes_manifest

variables:
  SONAR_URL: "http://10.0.0.13:9000"
  DOCKER_IMAGE: "raziels/ultimate-cicd:${CI_COMMIT_SHORT_SHA}"

compile:
  stage: compile
  tags:
    - "raziel-runner-pc"
  image: maven:3.8.4-openjdk-17-slim
  cache:
    key: "maven-cache"
    paths:
      - .m2/repository
  script:
    - echo "Compiling Maven project..."
    - mkdir -p .m2/repository
    - mvn clean compile
  artifacts:
    paths:
      - target/

unit_test:
  stage: unit_test
  tags:
    - "raziel-runner-pc"
  image: maven:3.8.4-openjdk-17-slim
  cache:
    key: "maven-cache"
    paths:
      - .m2/repository
  script:
    - echo "Running unit tests..."
    - mkdir -p .m2/repository
    - mvn test
  dependencies:
    - compile

sonarqube:
  stage: sonarqube
  tags:
    - "raziel-runner-pc"
  image: maven:3.8.4-openjdk-17-slim
  cache:
    key: "maven-cache"
    paths:
      - .m2/repository
  script:
    - echo "Running SonarQube Analysis..."
    - mkdir -p .m2/repository
    - mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL} -Dsonar.projectKey=com.raziel:ultimate-cicd -Dsonar.projectName="Ultimate CI/CD Project" -Dsonar.java.binaries=. -f pom.xml
  dependencies:
    - unit_test

package:
  stage: package
  tags:
    - "raziel-runner-pc"
  image: maven:3.8.4-openjdk-17-slim
  cache:
    key: "maven-cache"
    paths:
      - .m2/repository
  script:
    - echo "Packaging the application..."
    - mkdir -p .m2/repository
    - mvn package
  artifacts:
    paths:
      - target/ultimate-cicd-1.0.jar
  dependencies:
    - compile
    - unit_test

nexus_artifact:
  stage: nexus_artifact
  tags:
    - "raziel-runner-pc"
  image: maven:3.8.4-openjdk-17-slim
  cache:
    key: "maven-cache"
    paths:
      - .m2/repository
  script:
    - echo "Uploading to Nexus Artifact Repository..."
    - mkdir -p .m2/repository
    - mvn deploy -Dmaven.test.skip=true -s settings.xml
  dependencies:
    - package

deploy:
  stage: deploy
  tags:
    - "raziel-runner-pc"
  script:
    - echo "Uploading application to Docker Hub..."
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
    - docker build -t $DOCKER_IMAGE .
    - docker push $DOCKER_IMAGE
  dependencies:
    - package

argocd_kubernetes_manifest:
  stage: argocd_kubernetes_manifest
  image: docker:20.10.12
  services:
    - docker:20.10.12-dind
  before_script:
    - apk add --no-cache openssh git
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H gitlab.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - eval $(ssh-agent -s)
    - ssh-add ~/.ssh/id_rsa
    - git config --global user.email "razupx@gmail.com"
    - git config --global user.name "Raziel Sakira"
    - git clone git@gitlab.com:razielsa/manifests-projects.git /tmp/manifests-projects
    - cd /tmp/manifests-projects
    - sed -i "s/ultimate-cicd:.*/ultimate-cicd:${CI_COMMIT_SHORT_SHA}/g" ultimate-cicd-manifest/deployment.yml
    - git add ultimate-cicd-manifest/deployment.yml
    - git commit -am "Update Image version for Ultimate-CI/CD to ${CI_COMMIT_SHORT_SHA}"
    - git push
  dependencies:
    - package